<%- include("../../views/partials/user/header") %>
<!-- Add SweetAlert2 CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<style>
.edit-profile-container {
    max-width: 800px;
    margin: 2rem auto;
    padding: 2rem;
    background: #fff;
    border-radius: 10px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
}

.profile-image-preview {
    width: 150px;
    height: 150px;
    border-radius: 50%;
    object-fit: cover;
    border: 3px solid #fff;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
}

.profile-image-preview:hover {
    transform: scale(1.05);
}

.form-label {
    font-weight: 600;
    color: #333;
}

.form-control {
    border: 1px solid #ddd;
    border-radius: 5px;
    padding: 0.75rem;
    transition: all 0.3s ease;
}

.form-control:focus {
    border-color: #046963;
    box-shadow: 0 0 0 0.2rem rgba(4, 105, 99, 0.25);
}

.btn-primary {
    background-color: #046963;
    border-color: #046963;
    padding: 0.75rem 1.5rem;
    font-weight: 600;
    transition: all 0.3s ease;
}

.btn-primary:hover {
    background-color: #03504c;
    border-color: #03504c;
    transform: translateY(-2px);
}

.btn-secondary {
    background-color: #6c757d;
    border-color: #6c757d;
    padding: 0.75rem 1.5rem;
    font-weight: 600;
    transition: all 0.3s ease;
}

.btn-secondary:hover {
    background-color: #5a6268;
    border-color: #5a6268;
    transform: translateY(-2px);
}

.alert {
    border-radius: 5px;
    padding: 1rem;
    margin-bottom: 1.5rem;
}

.alert-danger {
    background-color: #f8d7da;
    border-color: #f5c6cb;
    color: #721c24;
}

.invalid-feedback {
    display: none;
    color: #dc3545;
    font-size: 0.875rem;
    margin-top: 0.25rem;
}

.was-validated .form-control:invalid ~ .invalid-feedback {
    display: block;
}
</style>

<div class="edit-profile-container">
    <h2 class="text-center mb-4">Edit Profile</h2>
    
    <% if (message) { %>
        <div class="alert alert-danger"><%= message %></div>
    <% } %>
    
    <form action="/user/edit-profile" method="POST" enctype="multipart/form-data" class="needs-validation" novalidate id="editProfileForm">
        <div class="row">
            <div class="col-md-4 text-center mb-4">
                <div class="profile-image-section">
                    <img 
                        src="/uploads/profile/<%= user.profileImage || 'default-profile.png' %>" 
                        alt="Profile Image" 
                        class="profile-image-preview mb-3"
                        id="profileImagePreview"
                    >
                    <div class="form-group">
                        <input type="file" name="profileImage" id="profileImage" class="form-control" accept="image/*" style="display: none;">
                        <label for="profileImage" class="btn btn-outline-primary">Change Photo</label>
                    </div>
                </div>
            </div>
            
            <div class="col-md-8">
                <div class="form-group mb-3">
                    <label for="name" class="form-label">Name</label>
                    <input type="text" name="name" id="name" class="form-control" value="<%= user.name %>" required>
                    <div class="invalid-feedback">Please enter your name</div>
                </div>
                
                <div class="form-group mb-3">
                    <label for="email" class="form-label">Email</label>
                    <input type="email" name="email" id="email" class="form-control" value="<%= user.email %>" required>
                    <div class="invalid-feedback">Please enter a valid email address</div>
                </div>
                
                <div class="form-group mb-3">
                    <label for="phone" class="form-label">Phone</label>
                    <input type="tel" name="phone" id="phone" class="form-control" value="<%= user.phone %>" required pattern="[0-9]{10}">
                    <div class="invalid-feedback">Please enter a valid 10-digit phone number</div>
                </div>
                
                <div class="d-flex justify-content-between mt-4">
                    <button type="submit" class="btn btn-primary" id="saveChangesBtn">Save Changes</button>
                    <a href="/user/profile" class="btn btn-secondary">Cancel</a>
                </div>
            </div>
        </div>
    </form>
</div>

<script>
// Form validation and submission with SweetAlert
(function() {
    'use strict';
    const form = document.getElementById('editProfileForm');
    const saveBtn = document.getElementById('saveChangesBtn');
    
    // Form validation
    form.addEventListener('submit', function(event) {
        if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
        } else {
            event.preventDefault();
            handleFormSubmission();
        }
        form.classList.add('was-validated');
    }, false);
    
    // Handle form submission with SweetAlert
    function handleFormSubmission() {
        const formData = new FormData(form);
        
        // Show loading state
        saveBtn.disabled = true;
        saveBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Saving...';
        
        fetch('/user/edit-profile', {
            method: 'POST',
            body: formData,
            headers: {
                'Accept': 'application/json'
            }
        })
        .then(response => {
            if (response.redirected) {
                // Show success message and redirect
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Profile updated successfully!',
                    timer: 2000,
                    showConfirmButton: false
                }).then(() => {
                    window.location.href = response.url;
                });
            } else if (response.ok) {
                return response.json();
            } else {
                return response.json().then(data => {
                    throw new Error(data.message || 'Network response was not ok');
                });
            }
        })
        .then(data => {
            if (data && data.success) {
                // Show success message and redirect
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: data.message || 'Profile updated successfully!',
                    timer: 2000,
                    showConfirmButton: false
                }).then(() => {
                    window.location.href = '/user/profile';
                });
            } else if (data && !data.success) {
                // Show error message
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: data.message || 'An error occurred while updating profile.'
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: error.message || 'An unexpected error occurred. Please try again.'
            });
        })
        .finally(() => {
            // Reset button state
            saveBtn.disabled = false;
            saveBtn.innerHTML = 'Save Changes';
        });
    }
})();

// Profile image preview and validation
document.getElementById('profileImage').addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
        // Validate file type
        if (!file.type.startsWith('image/')) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid File Type',
                text: 'Please select an image file'
            });
            this.value = '';
            return;
        }
        
        // Validate file size (5MB limit)
        if (file.size > 5 * 1024 * 1024) {
            Swal.fire({
                icon: 'error',
                title: 'File Too Large',
                text: 'Image size should be less than 5MB'
            });
            this.value = '';
            return;
        }

        // Preview image
        const reader = new FileReader();
        reader.onload = function(e) {
            document.getElementById('profileImagePreview').src = e.target.result;
            Swal.fire({
                icon: 'success',
                title: 'Image Selected',
                text: 'Image preview updated successfully',
                timer: 1500,
                showConfirmButton: false
            });
        }
        reader.readAsDataURL(file);
    }
});

// Phone number validation
document.getElementById('phone').addEventListener('input', function(e) {
    this.value = this.value.replace(/[^0-9]/g, '').slice(0, 10);
});
</script>

<%- include("../../views/partials/user/footer") %> 